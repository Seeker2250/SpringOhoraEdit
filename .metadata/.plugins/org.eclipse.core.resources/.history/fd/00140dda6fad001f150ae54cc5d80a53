package kr.ohora.www.controller;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.request;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.List;

import javax.servlet.http.Cookie;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.ohora.www.domain.product.ProductDTO;
import kr.ohora.www.service.ProductService;
import lombok.extern.log4j.Log4j;

@Controller
@Log4j
public class ProductController {
	
	@Autowired
    private ProductService productService;

    @GetMapping("/prdList.htm")
    public String prdList(
        @RequestParam(defaultValue = "1") int currentPage,
        @RequestParam(defaultValue = "12") int numberPerPage,
        @RequestParam(defaultValue = "0") int categoryNumber,
        Model model,
        @CookieValue(value =  "basketItems", required = false) String basketItems,
        HttpServletRequest request) throws UnsupportedEncodingException {
    	
        // 모든 쿠키 출력해보기
        Cookie[] cookies = request.getCookies();
        if (cookies != null) {
            for (Cookie cookie : cookies) {
                System.out.println("쿠키이름: " + cookie.getName());
                System.out.println("쿠키값: " + cookie.getValue());
            }
        }
    	
    	System.out.println(basketItems+"들어왔음~~~~~~~~~~~~~~~~~~~~~~~");
        // 상품 리스트와 총 레코드 수 가져오기
        List<ProductDTO> productList = productService.getProductList(currentPage, numberPerPage, categoryNumber);
        int totalRecords = productService.getTotalRecords(categoryNumber);

        // 모델에 데이터 추가
        model.addAttribute("list", productList);
        model.addAttribute("totalRecords", totalRecords);
        
        if (basketItems != null) {
        String notUserCartValue = URLDecoder.decode(basketItems, "UTF-8");
		System.out.println("쿠키값@@@@@@@@@"+notUserCartValue);
		}else {
		    System.out.println("basketItems is null!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
		}
        
        return "prdList.prdList"; // WEB-INF/views/product/prdList.jsp
    }
}
